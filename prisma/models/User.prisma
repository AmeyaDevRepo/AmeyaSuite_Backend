// User authentication and profile model
model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  avatar    String?  // Profile picture URL
  role      UserRole @default(USER)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  posts     Post[]
  profile   UserProfile?

  @@map("users")
}

// User roles enum
enum UserRole {
  USER
  ADMIN
  MODERATOR
}

// Extended user profile information
model UserProfile {
  id          Int      @id @default(autoincrement())
  bio         String?
  website     String?
  location    String?
  dateOfBirth DateTime?
  phone       String?
  
  // Relations
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int      @unique
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("user_profiles")
}
