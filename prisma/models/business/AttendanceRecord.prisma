// Attendance tracking
model AttendanceRecord {
  id          String   @id @default(cuid())
  date        DateTime @db.Date
  
  // Time tracking
  checkIn     DateTime?
  checkOut    DateTime?
  breakStart  DateTime?
  breakEnd    DateTime?
  
  // Calculated fields
  hoursWorked Decimal? @db.Decimal(4, 2)
  breakHours  Decimal? @db.Decimal(4, 2)
  overtimeHours Decimal? @db.Decimal(4, 2)
  
  // Status
  status      AttendanceStatus @default(PRESENT)
  notes       String?
  location    String? // Check-in location
  ipAddress   String? // IP address for remote check-ins
  
  // Approval
  approvedBy  String? // Manager who approved
  approvedAt  DateTime?
  
  // Relations
  employee    Employee @relation(fields: [employeeId], references: [id], onDelete: Cascade)
  employeeId  String
  company     Company  @relation(fields: [companyId], references: [id], onDelete: Cascade)
  companyId   String
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@unique([employeeId, date])
  @@map("attendance_records")
}
